input {
    http {
        threads => 4
    }
}
filter {
    if [headers][http_user_agent] == "Logplex/v132" {
        split { }
        grok {
            match => {
                "message" => [
                    "<%{NUMBER:code}>1 %{TIMESTAMP_ISO8601:timestamp} host app %{DATA:dyno} - %{IP:ip} - - \[%{DATA:gtimestamp}\] \"%{WORD:method} %{DATA:path} HTTP/1.1\" %{NUMBER:status} %{DATA:process_id} \"%{DATA:referrer}\" \"%{GREEDYDATA:agent}\"",
                    "<%{NUMBER:code}>1 %{TIMESTAMP_ISO8601:timestamp} host %{WORD:component} %{DATA:type} - %{GREEDYDATA:syslog_message}"
                ]
            }
            break_on_match => true
    }
    }
    else {
        drop { }
    }
    kv {
        source => "syslog_message"
        exclude_keys => [ "bytes", "fwd", "port" ]
    }
    mutate {
        add_field => { "message_count" => "%{[headers][logplex_msg_count]}" }
        remove_field => ["syslog_message", "headers"]
        gsub => [
            # strip ms to help convert connect and service to numbers
            "connect", "ms", "",
            "service", "ms", ""
        ]
    }
}
output {
    elasticsearch {
        hosts => "${HOST}"
        user => "${HOST_USER}"
        password => "${HOST_PASSWORD}"
        index => "heroku-logstash-%{+YYYY.MM.dd}"
    }
}